---
title: "Make a highlighted time-series plot"
description: |
  Time-series analyses can be handy for seeing trends over time, and exploring how trends relate to major events. Here, we show how to create an exploratory time-series plot comparing observations of waterbirds prior to and during the COVID-19 pandemic.
author:
  - name: "Thai Rushbrook"
  - name: "Olivia Torresan"
  - name: "Dax Kellie"
date: "2023-04-03"
title-block-banner: "#B8573E"
toc: true
toc-location: left
toc-depth: 3
categories:
  - Eukaryota
  - Animalia
  - Aves
  - Summaries
  - Intern-post
image: ducks.png
freeze: true
---

```{r}
#| include: false
library(htmltools)
```

<!-- remove metadata section -->
```{css, echo = FALSE}
#title-block-header.quarto-title-block.default .quarto-title-meta {
    display: none;
}
```


<!-- Author card -->

:::{.author-card}
:::{.author-card-text}

#### Author
Thai Rushbrook  
[Olivia Torresan](https://labs.ala.org.au/about/Torresan_Olivia/index.html)  
[Dax Kellie](https://labs.ala.org.au/about/Kellie_Dax/index.html)  

#### Date
3 April 2023

:::

:::{.author-card-image}
```{r, out.width='120px', out.extra='style="clip-path: circle();"', echo=FALSE}
knitr::include_graphics("https://raw.githubusercontent.com/AtlasOfLivingAustralia/ala-labs/main/images/people/thai.jpg")
```
:::

:::{.author-card-image}
```{r, out.width='120px', out.extra='style="clip-path: circle();"', echo=FALSE}
knitr::include_graphics("https://raw.githubusercontent.com/AtlasOfLivingAustralia/ala-labs/main/images/people/olivia.jpg")
```
:::

:::{.author-card-image}
```{r, out.width='120px', out.extra='style="clip-path: circle();"', echo=FALSE}
knitr::include_graphics("https://raw.githubusercontent.com/AtlasOfLivingAustralia/ala-labs/main/images/people/dax.jpg")
```
:::

:::

<!------------------------ Post starts here ------------------------>

:::{.callout-tip}

## Intern Post

:::

A majority of species observations in the Atlas of Living Australia are collected opportunistically, where people record observations incidentally rather than through an ongoing monitoring program.

However, whether an observation is recorded or not doesn't just depend on the species. It might be rainy, it might be too hot, an area might be inaccessible; all of these factors can affect whether people make an observation.

The COVID-19 pandemic had a major impact on people's health, behaviour and travel. In Australia, several lockdowns over 2020-2021 imposed restrictions on people's movements, limiting them to certain activities near their homes. Melbourne experienced [the longest continuous lockdown in the world](https://www.9news.com.au/national/coronavirus-update-victoria-monday-october-4-melbournes-lockdown-longest-world/e159d5b5-2d0f-452a-adb3-979150f9793f). 

To what extent did COVID-19 and lockdowns affect the number of species observations people made over that time? Here, we'll use a highlighted time-series plot to investigate how lockdowns in Melbourne affected the observations of *Anatidae* (ducks, geese and swans), a taxonomic group frequently seen on walks and outdoor gatherings, compared to previous years.

# Get data

We'll start by downloading *Anatidae* records.

:::{layout-ncol=3 style="width=120px;"}

<img class = "clipped" src="https://ala-images.s3.ap-southeast-2.amazonaws.com/store/5/9/2/0/cd4a660e-358c-4863-81b8-08cfd7280295/original"></img>

<img class = "clipped"src="https://ala-images.s3.ap-southeast-2.amazonaws.com/store/7/c/4/2/b133aa0c-ba9f-4f19-8f2f-938f34b724c7/original"></img>

<img class = "clipped" src="https://ala-images.s3.ap-southeast-2.amazonaws.com/store/1/c/9/e/f35fbe9d-1116-4eb2-82d4-03d8e032e9c1/original"></img>

:::
::: {.figure-caption}
Left: [*Tadorna (Casarca) tadornoides* (Tracey Hinton CC-BY-NC 4.0 (Int))](https://biocache.ala.org.au/occurrences/31f020c4-1050-40e7-b499-8cf89afa84fe) Middle: [*Cygnus (Chenopis) atratus* (jpshahady CC-BY-NC 4.0 (Int))](https://biocache.ala.org.au/occurrences/2af3958b-1a06-45a7-8ee2-315c63c2f0c6) Right: [*Spatula rhynchotis* (Annette Green CC-BY-NC 4.0 (Int))](https://biocache.ala.org.au/occurrences/546765db-4567-479d-b78f-77433493fae6)
:::

First, let's load some packages: 

```{r}
#| message: false
#| warning: false
#| error: false
# Load packages
library(galah)
library(tidyverse)
library(grid)
library(pilot) # remotes::install_github("olihawkins/pilot")
library(ggtext)
library(showtext)
```

Let's use the [{galah} package](http://galah.ala.org.au/) to download *Anatidae* records in Melbourne from years before and during COVID-19. 

Searching with `search_all(fields)` shows us that {galah} contains [Greater Capital City Statistical Areas](https://www.abs.gov.au/statistics/standards/australian-statistical-geography-standard-asgs-edition-3/jul2021-jun2026/main-structure-and-greater-capital-city-statistical-areas/greater-capital-city-statistical-areas), which we can use to filter our query. 

```{r}
search_all(fields, "city")
search_all(fields, "city") |> search_values("melbourne")
```


Let's build our query to return *Anatidae* records from `GREATER MELBOURNE` and use `galah_select()` to return only the `eventDate` column.

You will need to first provide a [registered email with the ALA](https://auth.ala.org.au/userdetails/registration/createAccount) using `galah_config()` before retrieving records.

```{r}
#| eval: false
# Add registered email (register at ala.org.au)
galah_config(email = "your-email@email.com")
```

```{r}
#| echo: false
#| message: false
#| warning: false
galah_config(email = "dax.kellie@csiro.au", verbose = FALSE)
```

```{r}
#| message: false
birds <-
  galah_call() |>
  galah_identify("Anatidae") |>
  galah_filter(
    cl10929 == "GREATER MELBOURNE",
    year >= 2017,
    year <= 2021,
    basisOfRecord == "HUMAN_OBSERVATION"
  ) |>
  galah_select(eventDate) |>
  atlas_occurrences()

birds |> slice_sample(n = 10)
```

We'll then extract the week and year of each date and count the total observations for each week.

```{r}
#| message: false
#| warning: false
birds_weekly <- birds |> 
  mutate(date = as_date(eventDate),
         year = year(eventDate),
         week = week(eventDate)) |>
  filter(year > 2016) |> # remove stray 2016 records
  group_by(year, week) |>
  summarise(week_obs = n())

birds_weekly 
```

We want to compare observations recorded in 2020-2021 to previous years, but because we know that contributions to the ALA have increased each year, comparing raw numbers will be an unequal comparison and bias our results.

To avoid this, let's *scale* our weekly record counts by the total number of *Anatidae* observations each year. Doing this let's us compare proportions rather than raw numbers. 

First let's download the total *Anatidae* records for each year. 

```{r}
birds_yearly <- 
  galah_call() |>    
  galah_identify("Anatidae") |> 
  galah_filter(cl10929 == "GREATER MELBOURNE", 
               year >= 2017, year <= 2021) |> 
  galah_group_by(year) |>
  atlas_counts() |>
  rename(year_obs = count) |>
  mutate(year = as.numeric(year)) |>
  arrange(-desc(year))
  
birds_yearly
```

Now we'll join `birds_yearly` with `birds_weekly` so we can calculate the proportion of records observed each week. We'll do this by dividing each row's weekly total by the yearly total.

```{r}
#| message: false
#| warning: false
birds_prop <- birds_weekly |> 
  left_join(birds_yearly) |> 
  rowwise() |> 
  mutate(prop = week_obs / year_obs,
         .keep = "unused") |> 
  ungroup()

birds_prop
```

To compare observations in years prior to and during COVID-19, we'll want to plot two lines: 

  1. A baseline of average weekly observation counts in 2017-2019 
  2. A line with weekly observation counts over 2020 and 2021

To create the average 2017-2019 baseline, let's calculate the mean proportion of records each week from 2017-2019.

To do this, we'll place our weekly proportions in separate columns using `pivot_wider()`.

```{r}
birds_wide <- birds_prop |>
  pivot_wider(names_from = year, 
              values_from = prop, 
              names_sort = TRUE,
              names_glue = "year_{year}")

birds_wide
```

Then we'll calculate the mean proportion of observations each week across `year_2017`, `year_2018` and `year_2019` columns.

```{r}
birds_mean_prop <- birds_wide |>
  rowwise() |>
  mutate(
    mean_2017_19 = mean(c_across(year_2017:year_2019)),
    .keep = "unused"
    ) |>
  ungroup()

birds_mean_prop
```

Now we have all the numbers we need for plotting! We just need to reorganise them so that they plot correctly. 

Two columns in `birds_mean_prop` contain proportional counts for 2020 and 2021. Although there are 52 weeks in a year, both years extend from weeks 1-53 because neither year started or ended *exactly* at the end of the week â€” 2020 ended on a Thursday and 2021 ended on a Friday. 

```{r}
#| message: false
wday(ymd("2020-12-31"), label = TRUE)
wday(ymd("2021-12-31"), label = TRUE)
```

This means that the proportional counts in week 53 of 2020 and week 1 of 2021 are in the same week! We can combine them to better represent the full week's observations and save the combined count in week 1 of 2021.

```{r}
#| message: false
#| warning: false
birds_mean_prop <- birds_mean_prop |>
  rows_update(tibble(week = 1, year_2021 = sum(birds_mean_prop$year_2020[53] + birds_mean_prop$year_2021[1]))) |>
  rows_update(tibble(week = 53, year_2020 = NA)) # remove 2020's week 53 count

birds_mean_prop |> slice_head(n = 3)
birds_mean_prop |> slice_tail(n = 3)
```

To allow us to plot proportional counts from Jan 2020 to Dec 2021 as one line (105 weeks total), we'll separate our 2021 proportional counts, revise 2021 week numbers to start from 53, and place them under our 2020 proportions. That'll let us plot from week 1 to week 105!

```{r}
# 2021 record count proportions
birds_2021 <- birds_mean_prop |>
  select(-year_2020) |>
  rename(prop = year_2021) |>
  mutate(week = week + 52)

glimpse(birds_2021)

# 2020 + 2021 record count proportions
birds_final <- birds_mean_prop |>
  select(-year_2021) |>
  drop_na() |>
  rename(prop = year_2020) |>
  bind_rows(birds_2021) # attach 2021 to the bottom

glimpse(birds_final)
```



# Lockdowns

During the height of the pandemic, Melbourne had 6 distinct lockdowns. Let's add their start and end dates to a `tibble`.

Because we want to plot 2020 and 2021 on the same plot, we'll use `ifelse()` to make sure our week numbers in 2021 match our week numbers in `birds_final`.

```{r}
#| message: false
n_lockdown <- c(1:6)
start_date <- c("2020-03-31", "2020-07-09",
                "2021-02-13", "2021-05-28",
                "2021-07-16", "2021-08-05")
end_date <- c("2020-05-12", "2020-10-27",
              "2021-02-17", "2021-06-10",
              "2021-07-27", "2021-10-21")

lockdowns <- tibble(n_lockdown, start_date, end_date) |>
  mutate(
    n_days = as_date(ymd(end_date)) - as_date(ymd(start_date)),
    week_start = ifelse(year(start_date) == 2020, 
                        week(start_date), week(start_date) + 52),
    week_end = ifelse(year(end_date) == 2020, 
                      week(end_date), week(end_date) + 52),
    )
lockdowns 
```


# Make plot

To help us see the components of our final plot more clearly, let's construct our visualisation step-by-step.

First, we'll add our lockdown dates as highlighted rectangular blocks. To do this we can use `geom_rect()`, setting the `xmin` and `xmax` values to our `week_start` and `week_end` columns in `lockdowns`. We'll make the rectangle spread across the entire plot by setting `ymax = Inf` and `ymin = 0`.

We'll also set our `fill` inside of `aes()` and define its value within `scale_fill_manual()` which will allow us to add the lockdown colour and label to its own legend. 

```{r}
#| column: body-outset
#| fig-align: center
#| out-extra: "style=margin-left:auto;margin-right:auto;"
p1 <- ggplot() +
  geom_rect(data = lockdowns,
            aes(xmin = week_start,
                xmax = week_end,
                fill = "Lockdown"),
            ymin = 0,
            ymax = Inf,
            alpha=0.2) +
  scale_fill_manual(
    values = c("Lockdown" = pilot_color("yellow")))
p1
```

Next we'll add our proportional species observation counts as lines. We can define their colours and edit the legend and axis labels, too. 

```{r}
#| warning: false
#| column: body-outset
#| fig-align: center
#| out-extra: "style=margin-left:auto;margin-right:auto;"
p2 <- p1 +
  # add lines
  geom_line(data = birds_final, 
            aes(x = week, y = prop, 
            color = "2020-21 Records"), 
            linewidth = 1) + 
  geom_line(data = birds_final, 
            aes(x = week, y = mean_2017_19, 
            color = "2017-19 Average"),
            linetype = "twodash", 
            linewidth = 0.8) + 
  # add fill
  geom_area(data = birds_final, 
            aes(x = week, y = prop),
            fill=pilot_color("blue"), 
            alpha=0.3) + 
  scale_color_manual(values = c(pilot_color("orange"),
                                pilot_color("blue")), 
                     labels = c("2017-19 (average)", 
                                "2020-21")) +
  guides(fill = guide_legend(title = ""), 
         color = guide_legend(title = "Year")) +
  labs(y = "Proportion of year's total observations",
       x = "Month",
       title = "Anatidae observations in Melbourne prior to & during COVID-19")
p2
```

The plot above is enough to see everything we need to see from our data. You *could* stop here if you wished, but we've gone ahead and made a more refined visualisation with nice fonts, axis scales, axis labels and titles!

```{r}
#| column: page
#| fig-align: center
#| fig-width: 10
#| fig-height: 6
#| code-fold: true
#| out-extra: "style=margin-left:auto;margin-right:auto;"

# add fonts
font_add_google("Montserrat", family = "mont")
font_add_google("Hind", family = "hind")  
showtext_auto(enable = TRUE)

p2 + 
  # make axis scales understandable
  scale_y_continuous(expand = c(0, 0),
                     limits = c(0, 0.035),
                     labels = scales::percent_format()) +
  scale_x_continuous(expand = c(0, 0),
                     limits = c(1, 105),
                     breaks = c(1, 14, 27, 40, 52, 65, 78, 91),
                     labels = c("Jan", "Apr", "Jul", "Oct", "Jan", "Apr", "Jul", "Oct")) +
  # add year x axis labels
  coord_cartesian(clip = "off") +
  annotate_pilot(label = "2020", x = 27, y = 0, 
                 alpha = 0.7, vjust = 3.8,size = 10) +
  annotate_pilot(label = "2021", x = 78, y = 0, 
                 alpha = 0.7, vjust = 3.8, size = 10) +
  labs(title = "*Anatidae* observations in Melbourne prior to & during COVID-19") +
  theme_pilot(grid = "",
              axes = "bl") +
  theme(axis.title.x = element_text(size = 23, vjust = -1.3),
        axis.title.y = element_text(size = 23),
        axis.text.x = element_text(size = 20),
        axis.text.y = element_text(size = 20),
        axis.line = element_line(linewidth = 0.5),
        legend.text = element_text(size = 23),
        legend.title = element_text(size = 20),
        plot.caption = element_text(size = 18),
        text = element_text(family = "hind"),
        plot.title = element_markdown(family = "mont", size = 31),
        plot.subtitle = element_markdown(family = "mont", size = 28))
```

Now that we have our final plot, we can see a few interesting trends: 

  1. In the first lockdown (soon after COVID-19 arrived in Australia), species observations were *lower* than the 2017-2019 average.
  2. In the 2 longest lockdowns, species observations were *higher* than the 2017-2019 average.
  3. In the last half of all lockdowns except the first lockdown, observations increased.
  
Are these trends that you expected to see? 

It's impossible to make any claims of *why* these trends emerged from our data visualisation alone, but we can speculate (for fun!) 

Were people making fewer observations in the first lockdown because they were preoccupied with all the other priorities of settling into new working-from-home routines? Did people make more observations at the tail end of lockdowns because they were seeking relief from being inside by spending more time by natural ponds and lakes? 

Some evidence from the US found [more people were using natural spaces during COVID-19](https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0243344), and [time in these spaces lowered depression and anxiety](https://www.sciencedirect.com/science/article/pii/S1353829222000740). A New Zealand study [found similar results](https://www.mdpi.com/2071-1050/14/12/7308).

# Final thoughts

This post has detailed how you can use ALA data to explore relationships between record counts and events. Although we can't make any causal claims from what we see in our plot, making a time-series is a nice way to do some exploratory analysis on a lot of data!


<details><summary style = "color: #E06E53;">Expand for session info</summary>

```{r, echo = FALSE}
library(sessioninfo)
# save the session info as an object
pkg_sesh <- session_info(pkgs = "attached")
# print it out
pkg_sesh
```

</details>
